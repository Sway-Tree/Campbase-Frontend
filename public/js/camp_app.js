// Generated by CoffeeScript 1.6.3
(function() {
  var App, Glue, Gui, Server, UseCase, app,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  _.defaults(this, {
    Before: function(object, methodName, adviseMethod) {
      return YouAreDaBomb(object, methodName).before(adviseMethod);
    },
    BeforeAnyCallback: function(object, methodName, adviseMethod) {
      return YouAreDaBomb(object, methodName).beforeAnyCallback(adviseMethod);
    },
    After: function(object, methodName, adviseMethod) {
      return YouAreDaBomb(object, methodName).after(adviseMethod);
    },
    Around: function(object, methodName, adviseMethod) {
      return YouAreDaBomb(object, methodName).around(adviseMethod);
    }
  });

  Server = (function() {
    function Server() {
      this.save_trip = __bind(this.save_trip, this);
    }

    Server.prototype.save_trip = function(info) {
      var _this = this;
      alert("dupa");
      return $.ajax({
        url: "http://0.0.0.0:3000/trips.json",
        type: "POST",
        data: {
          name: info[0],
          place: info[1],
          from: info[2],
          to: info[3],
          price: info[4],
          photo: info[5],
          description: info[6]
        },
        success: function(data, status, response) {
          return alert("Dziala! :))))");
        },
        error: function() {
          return alert("Nie dziala! :((((((((((((((((((((((((((((((((");
        },
        dataType: "json"
      });
    };

    return Server;

  })();

  UseCase = (function() {
    function UseCase(server) {
      this.server = server;
      this.sendTripOnBackend = __bind(this.sendTripOnBackend, this);
      this.addTripButton = __bind(this.addTripButton, this);
      this.showTrips = __bind(this.showTrips, this);
      this.Trips = [
        {
          name: "Skiing",
          place: "Jamaica",
          photo: "http://www.clker.com/cliparts/5/9/1/e/131294477634010115mountain%20cartoon-th.png",
          description: "SKI!qqqqqqqqqqqqwwwwwertyuiopasdfghjklmnbvcxza"
        }, {
          name: "Sailing",
          place: "Atlantic Ocean",
          photo: "http://s3.flog.pl/media/foto_mini/613309_ocean-noca.jpg",
          description: "SAIL!mnbvcxzaqwertyuioplkjhgfdsdsdfghjuhjhbffgm,k"
        }, {
          name: "Save the planet!",
          place: "Moon",
          photo: "http://img.wikinut.com/img/38.c5n8slo6k3ku0/jpeg/preview/Witch-flying-past-the-moon.jpeg",
          description: "FLY!ertyjkijnhbgvfcdvgnmjnhrbgvfnjewvfjivfjjgbbgbgnjg"
        }
      ];
    }

    UseCase.prototype.start = function() {
      console.log("hello");
      this.showTrips(this.Trips);
      return this.addTripButton();
    };

    UseCase.prototype.showTrips = function(Trips) {};

    UseCase.prototype.addTripButton = function() {};

    UseCase.prototype.sendTripOnBackend = function(info) {
      return this.server.save_trip(info);
    };

    return UseCase;

  })();

  Gui = (function() {
    function Gui() {
      this.saveNewTrip = __bind(this.saveNewTrip, this);
      this.addingTrips = __bind(this.addingTrips, this);
      this.editTripForm = __bind(this.editTripForm, this);
      this.enrollForTrip = __bind(this.enrollForTrip, this);
      this.tripDetailsClicked = __bind(this.tripDetailsClicked, this);
      this.showTrip = __bind(this.showTrip, this);
      this.tripsOnFeed = __bind(this.tripsOnFeed, this);
      this._createElementFor = __bind(this._createElementFor, this);
    }

    Gui.prototype._createElementFor = function(templateId, data) {
      var element, html, source, template;
      source = $(templateId).html();
      template = Handlebars.compile(source);
      html = template(data);
      return element = $(html);
    };

    Gui.prototype.tripsOnFeed = function(Trips) {
      var i, trip, _i, _len, _results;
      i = 0;
      _results = [];
      for (_i = 0, _len = Trips.length; _i < _len; _i++) {
        trip = Trips[_i];
        this.showTrip(trip, i);
        _results.push(i = i + 1);
      }
      return _results;
    };

    Gui.prototype.showTrip = function(trip, i) {
      var detailRequest, editRequest, element,
        _this = this;
      element = this._createElementFor("#trip-row-template", {
        photo: trip.photo,
        name: trip.name,
        place: trip.place,
        id: i
      });
      $("#mainFeed").append(element);
      editRequest = $("#edit-trip" + i);
      editRequest.click(function() {
        return _this.editTripForm();
      });
      detailRequest = $("#show-trip-details" + i);
      return detailRequest.click(function() {
        return _this.tripDetailsClicked(trip.description, i);
      });
    };

    Gui.prototype.tripDetailsClicked = function(description, i) {
      var element, signUp,
        _this = this;
      element = this._createElementFor("#show-trip-details-template", {
        description: description,
        id: i
      });
      $("#myModal").html(element);
      signUp = $("#going-on-trip");
      return signUp.click(function() {
        return _this.enrollForTrip();
      });
    };

    Gui.prototype.enrollForTrip = function() {
      return alert("You've just enrolled for a trip!");
    };

    Gui.prototype.editTripForm = function() {
      var element;
      element = this._createElementFor("#edit-trip-template");
      return $("#editModal").html(element);
    };

    Gui.prototype.addingTrips = function() {
      var stupidButton,
        _this = this;
      stupidButton = $("#saveTripButton");
      return stupidButton.click(function() {
        return _this.saveNewTrip([$("#tripName").val(), $("#tripPlace").val(), $("#tripFrom").val(), $("#tripTo").val(), $("#tripPrice").val(), $("#tripPhoto").val(), $("#tripDesc").val()]);
      });
    };

    Gui.prototype.saveNewTrip = function(info) {};

    return Gui;

  })();

  Glue = (function() {
    function Glue(useCase, gui, server) {
      var _this = this;
      this.useCase = useCase;
      this.gui = gui;
      this.server = server;
      After(this.useCase, "showTrips", function(trips) {
        return _this.gui.tripsOnFeed(trips);
      });
      After(this.useCase, "addTripButton", function() {
        return _this.gui.addingTrips();
      });
      After(this.gui, "saveNewTrip", function(info) {
        return _this.useCase.sendTripOnBackend(info);
      });
      After(this.useCase, "sendTripOnBackend", function(info) {
        return _this.server.save_trip(info);
      });
    }

    return Glue;

  })();

  App = (function() {
    function App() {
      var glue, gui, server, usecase;
      server = new Server();
      usecase = new UseCase(server);
      gui = new Gui();
      glue = new Glue(usecase, gui, server);
      usecase.start();
    }

    return App;

  })();

  app = new App();

}).call(this);

/*
//@ sourceMappingURL=camp_app.map
*/
